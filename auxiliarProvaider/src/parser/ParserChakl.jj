options
{
  static = false;
}

PARSER_BEGIN(ParserChakl)

package parser;

public class ParserChakl
{
  	private Indicador indicador
  
	public boolean parsearFormula() throws ParseException
  	{
		this.formulaDelIndicador();
		
		return true;
	}
}

PARSER_END(ParserChakl)

SKIP :
{
 "\r"
| "\t"
| "\n"
}

TOKEN :   
{
  < SUMA : "+" >
| < RESTA : "-" >
| < PRODUCTO : "*" >
| < DIVISION : "/" >
}


TOKEN :
{
  <COEFICIENTE : (<NUMERO>)* <LETRA> (<LETRA> | <NUMERO>)* >
| <LETRA : ["a"-"z", "A"-"Z"]>
| <NUMERO : (["0"-"9"])+ | (["0"-"9"])+"."(["0"-"9"])+>
}

void formulaDelIndicador() :
{}
{
  < COEFICIENTE > "=" ladoDerecho()
}

void ladoDerecho() :
{
	String s = "";
	Token literalIzq;
	Token coefIzq;
	Token literalDer;
	Token coefDer;
}
{
	(
	  (literalIzq=< NUMERO > { builder.agregarLiteral(literalIzq.image) } | coefIzq=< COEFICIENTE > { builder.agregarCoeficiente(coefIzq.image) }) 
	  (s=operador() (literalDer=< NUMERO > | coefDer=< COEFICIENTE >))*
	) { if(s.equals(""))
			
	  }
}

String operador() :
{Token t;}
{
  (t=< SUMA > | t=< RESTA > | t=< PRODUCTO > | t=< DIVISION >){ return t.image; }
}









